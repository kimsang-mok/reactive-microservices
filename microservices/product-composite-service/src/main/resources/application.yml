springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v1/api-docs
  packagesToScan: com.kimsang.microservices.composite.product
  pathsToMatch: /**
  cache.disabled: true

  swagger-ui:
    oauth2-redirect-url: https://localhost:8443/swagger-ui/oauth2-redirect.html
    oauth:
      clientId: writer
      clientSecret: secret
      useBasicAuthenticationWithAccessCodeGrant: true

  oAuthFlow:
    authorizationUrl: https://localhost:8443/oauth2/authorize
    tokenUrl: https://localhost:8443/oauth2/token

api:

  common:
    version: 1.0.0
    title: Sample API
    description: Description of the API...
    termsOfService: MY TERMS OF SERVICE
    license: MY LICENSE
    licenseUrl: MY LICENSE URL

    externalDocDesc: MY WIKI PAGE
    externalDocUrl: MY WIKI URL
    contact:
      name: NAME OF CONTACT
      url: URL TO CONTACT
      email: contact@mail.com

server:
  port: 7000
  error:
    include-message: always
  forward-headers-strategy: framework

spring.application.name: product-composite

app:
  eureka-server: localhost
  eureka-username: u
  eureka-password: p
  auth-server: localhost



org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE

eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

logging:
  level:
    root: INFO
    com.kimsang: DEBUG

spring:
  test:
    context:
      failure:
        threshold: 10

  cloud:
    stream:
      default-binder: rabbit

      bindings:
        products-out-0:
          destination: products
          producer:
            required-groups: auditGroup
        recommendations-out-0:
          destination: recommendations
          producer:
            required-groups: auditGroup
        reviews-out-0:
          destination: reviews
          producer:
            required-groups: auditGroup

      kafka:
        binder:
          brokers: 127.0.0.1:9092

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${app.auth-server}:9999

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
debug: true
---
spring:
  config:
    activate:
      on-profile: docker
server:
  port: 8080

app:
  eureka-server: eureka
  auth-server: auth-server

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka

---
spring.config.activate.on-profile: streaming_partitioned

spring:
  cloud:
    stream:
      bindings:
        products-out-0.producer:
          partition-key-expression: headers['partitionKey']
          partition-count: 2

        recommendations-out-0.producer:
          partition-key-expression: headers['partitionKey']
          partition-count: 2

        reviews-out-0.producer:
          partition-key-expression: headers['partitionKey']
          partition-count: 2


---
spring.config.activate.on-profile: kafka

management.health.rabbit.enabled: false
spring:
  cloud:
    stream:
      default-binder: kafka
      kafka:
        binder:
          replication-factor: 1

  kafka:
    bootstrap-servers: kafka:9092


